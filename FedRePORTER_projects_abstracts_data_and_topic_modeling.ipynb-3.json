{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {
    "toc": true
   },
   "source": [
    "<h1>Table of Contents<span class=\"tocSkip\"></span></h1>\n",
    "<div class=\"toc\"><ul class=\"toc-item\"><li><span><a href=\"#NCSES-class---FedRePORTER-and-IPEDS-data\" data-toc-modified-id=\"NCSES-class---FedRePORTER-and-IPEDS-data-1\"><span class=\"toc-item-num\">1&nbsp;&nbsp;</span>NCSES class - FedRePORTER and IPEDS data</a></span><ul class=\"toc-item\"><li><span><a href=\"#Introduction\" data-toc-modified-id=\"Introduction-1.1\"><span class=\"toc-item-num\">1.1&nbsp;&nbsp;</span>Introduction</a></span></li><li><span><a href=\"#Python-Setup\" data-toc-modified-id=\"Python-Setup-1.2\"><span class=\"toc-item-num\">1.2&nbsp;&nbsp;</span>Python Setup</a></span></li></ul></li><li><span><a href=\"#Load-the-data\" data-toc-modified-id=\"Load-the-data-2\"><span class=\"toc-item-num\">2&nbsp;&nbsp;</span>Load the data</a></span><ul class=\"toc-item\"><li><span><a href=\"#Federal-RePORTER---Projects-(https://federalreporter.nih.gov/FileDownload)\" data-toc-modified-id=\"Federal-RePORTER---Projects-(https://federalreporter.nih.gov/FileDownload)-2.1\"><span class=\"toc-item-num\">2.1&nbsp;&nbsp;</span>Federal RePORTER - Projects (<a href=\"https://federalreporter.nih.gov/FileDownload\" target=\"_blank\">https://federalreporter.nih.gov/FileDownload</a>)</a></span></li><li><span><a href=\"#Federal-RePORTER---Abstracts-(https://federalreporter.nih.gov/FileDownload)\" data-toc-modified-id=\"Federal-RePORTER---Abstracts-(https://federalreporter.nih.gov/FileDownload)-2.2\"><span class=\"toc-item-num\">2.2&nbsp;&nbsp;</span>Federal RePORTER - Abstracts (<a href=\"https://federalreporter.nih.gov/FileDownload\" target=\"_blank\">https://federalreporter.nih.gov/FileDownload</a>)</a></span></li><li><span><a href=\"#IPEDS-data\" data-toc-modified-id=\"IPEDS-data-2.3\"><span class=\"toc-item-num\">2.3&nbsp;&nbsp;</span>IPEDS data</a></span></li></ul></li><li><span><a href=\"#Filter-the-data\" data-toc-modified-id=\"Filter-the-data-3\"><span class=\"toc-item-num\">3&nbsp;&nbsp;</span>Filter the data</a></span></li><li><span><a href=\"#Match-with-IPEDS-university-names\" data-toc-modified-id=\"Match-with-IPEDS-university-names-4\"><span class=\"toc-item-num\">4&nbsp;&nbsp;</span>Match with IPEDS university names</a></span></li><li><span><a href=\"#Text-analysis-(Topic-modeling)\" data-toc-modified-id=\"Text-analysis-(Topic-modeling)-5\"><span class=\"toc-item-num\">5&nbsp;&nbsp;</span>Text analysis (Topic modeling)</a></span><ul class=\"toc-item\"><li><span><a href=\"#LDA-method---Latent-Dirichlet-Allocation\" data-toc-modified-id=\"LDA-method---Latent-Dirichlet-Allocation-5.1\"><span class=\"toc-item-num\">5.1&nbsp;&nbsp;</span>LDA method - Latent Dirichlet Allocation</a></span></li><li><span><a href=\"#NMF-method---Non-negative-matrix-factorization\" data-toc-modified-id=\"NMF-method---Non-negative-matrix-factorization-5.2\"><span class=\"toc-item-num\">5.2&nbsp;&nbsp;</span>NMF method - Non-negative matrix factorization</a></span></li><li><span><a href=\"#Choosing-results\" data-toc-modified-id=\"Choosing-results-5.3\"><span class=\"toc-item-num\">5.3&nbsp;&nbsp;</span>Choosing results</a></span></li></ul></li><li><span><a href=\"#Creating-a-finalized-dataset\" data-toc-modified-id=\"Creating-a-finalized-dataset-6\"><span class=\"toc-item-num\">6&nbsp;&nbsp;</span>Creating a finalized dataset</a></span><ul class=\"toc-item\"><li><span><a href=\"#Number-of-grants-per-university\" data-toc-modified-id=\"Number-of-grants-per-university-6.1\"><span class=\"toc-item-num\">6.1&nbsp;&nbsp;</span>Number of grants per university</a></span></li><li><span><a href=\"#Top-5-topics-by-%grants\" data-toc-modified-id=\"Top-5-topics-by-%grants-6.2\"><span class=\"toc-item-num\">6.2&nbsp;&nbsp;</span>Top 5 topics by %grants</a></span></li><li><span><a href=\"#Top-5-topics-by-%dollars\" data-toc-modified-id=\"Top-5-topics-by-%dollars-6.3\"><span class=\"toc-item-num\">6.3&nbsp;&nbsp;</span>Top 5 topics by %dollars</a></span></li></ul></li></ul></div>"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## NCSES class - FedRePORTER and IPEDS data"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Introduction"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "This notebook builds links between two datasets:\n",
    "1. **Federal RePORTER** (https://federalreporter.nih.gov) - a collaborative effort led by STAR METRICS® to create a searchable database of scientific awards from agencies (across agencies or fiscal years, by the award's project leader, or by a text search of a project's title, terms, or abstracts).\n",
    "\n",
    "\n",
    "2. **IPEDS** (https://nces.ed.gov/ipeds/) - IPEDS is the Integrated Postsecondary Education Data System, a system of interrelated surveys conducted annually by the U.S. Department of Education’s National Center for Education Statistics (NCES). IPEDS gathers information from every college, university, and technical and vocational institution that participates in the federal student financial aid programs on enrollments, program completions, graduation rates, faculty and staff, finances, institutional prices, and student financial aid."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "**Output file**"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "**Data dictionary**"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Unit of observation: **university by year (from year 2000+)**"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Variables:\n",
    "- **#grants**\n",
    "- **top 10 topics by %grants**\n",
    "- **top 10 topics by %dollars**"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Python Setup"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 115,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Data manipulation\n",
    "import pandas as pd\n",
    "\n",
    "# Show full float numbers\n",
    "pd.set_option('float_format', '{:f}'.format)\n",
    "\n",
    "# Text analysis (topic modeling)\n",
    "import numpy as np\n",
    "import sklearn\n",
    "from sklearn.decomposition import NMF, LatentDirichletAllocation\n",
    "from sklearn.feature_extraction.text import TfidfVectorizer, CountVectorizer\n",
    "import string"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Load the data"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Federal RePORTER - Projects (https://federalreporter.nih.gov/FileDownload)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "projects_2000 = pd.read_csv('FedRePORTER_PRJ_C_FY2000.csv')\n",
    "projects_2001 = pd.read_csv('FedRePORTER_PRJ_C_FY2001.csv')\n",
    "projects_2002 = pd.read_csv('FedRePORTER_PRJ_C_FY2002.csv')\n",
    "projects_2003 = pd.read_csv('FedRePORTER_PRJ_C_FY2003.csv')\n",
    "projects_2004 = pd.read_csv('FedRePORTER_PRJ_C_FY2004.csv')\n",
    "projects_2005 = pd.read_csv('FedRePORTER_PRJ_C_FY2005.csv')\n",
    "projects_2006 = pd.read_csv('FedRePORTER_PRJ_C_FY2006.csv')\n",
    "projects_2007 = pd.read_csv('FedRePORTER_PRJ_C_FY2007.csv')\n",
    "projects_2008 = pd.read_csv('FedRePORTER_PRJ_C_FY2008.csv')\n",
    "projects_2009 = pd.read_csv('FedRePORTER_PRJ_C_FY2009.csv')\n",
    "projects_2010 = pd.read_csv('FedRePORTER_PRJ_C_FY2010.csv')\n",
    "projects_2011 = pd.read_csv('FedRePORTER_PRJ_C_FY2011.csv')\n",
    "projects_2012 = pd.read_csv('FedRePORTER_PRJ_C_FY2012.csv')\n",
    "projects_2013 = pd.read_csv('FedRePORTER_PRJ_C_FY2013.csv')\n",
    "projects_2014 = pd.read_csv('FedRePORTER_PRJ_C_FY2014.csv')\n",
    "projects_2015 = pd.read_csv('FedRePORTER_PRJ_C_FY2015.csv')\n",
    "projects_2016 = pd.read_csv('FedRePORTER_PRJ_C_FY2016.csv')\n",
    "projects_2017 = pd.read_csv('FedRePORTER_PRJ_C_FY2017.csv')\n",
    "projects_2018 = pd.read_csv('FedRePORTER_PRJ_C_FY2018.csv')\n",
    "\n",
    "projects = pd.concat([projects_2000,projects_2001,projects_2002,projects_2003,projects_2004,projects_2005,projects_2006,projects_2007,projects_2008,projects_2009,projects_2010,projects_2011,projects_2012,projects_2013,projects_2014,projects_2015,projects_2016,projects_2017,projects_2018])\n",
    "\n",
    "len(projects)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Federal RePORTER - Abstracts (https://federalreporter.nih.gov/FileDownload)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 54,
   "metadata": {},
   "outputs": [],
   "source": [
    "abstracts_2000 = pd.read_csv('FedRePORTER_PRJABS_C_FY2000.csv')\n",
    "abstracts_2001 = pd.read_csv('FedRePORTER_PRJABS_C_FY2001.csv')\n",
    "abstracts_2002 = pd.read_csv('FedRePORTER_PRJABS_C_FY2002.csv')\n",
    "abstracts_2003 = pd.read_csv('FedRePORTER_PRJABS_C_FY2003.csv')\n",
    "abstracts_2004 = pd.read_csv('FedRePORTER_PRJABS_C_FY2004.csv')\n",
    "abstracts_2005 = pd.read_csv('FedRePORTER_PRJABS_C_FY2005.csv')\n",
    "abstracts_2006 = pd.read_csv('FedRePORTER_PRJABS_C_FY2006.csv')\n",
    "abstracts_2007 = pd.read_csv('FedRePORTER_PRJABS_C_FY2007.csv')\n",
    "abstracts_2008 = pd.read_csv('FedRePORTER_PRJABS_C_FY2008.csv')\n",
    "abstracts_2009 = pd.read_csv('FedRePORTER_PRJABS_C_FY2009.csv')\n",
    "abstracts_2010 = pd.read_csv('FedRePORTER_PRJABS_C_FY2010.csv')\n",
    "abstracts_2011 = pd.read_csv('FedRePORTER_PRJABS_C_FY2011.csv')\n",
    "abstracts_2012 = pd.read_csv('FedRePORTER_PRJABS_C_FY2012.csv')\n",
    "abstracts_2013 = pd.read_csv('FedRePORTER_PRJABS_C_FY2013.csv')\n",
    "abstracts_2014 = pd.read_csv('FedRePORTER_PRJABS_C_FY2014.csv')\n",
    "abstracts_2015 = pd.read_csv('FedRePORTER_PRJABS_C_FY2015.csv')\n",
    "abstracts_2016 = pd.read_csv('FedRePORTER_PRJABS_C_FY2016.csv')\n",
    "abstracts_2017 = pd.read_csv('FedRePORTER_PRJABS_C_FY2017.csv')\n",
    "abstracts_2018 = pd.read_csv('FedRePORTER_PRJABS_C_FY2018.csv')\n",
    "\n",
    "# Merge all abstracts\n",
    "abstracts = pd.concat([abstracts_2000,abstracts_2001,abstracts_2002,abstracts_2003,abstracts_2004,abstracts_2005,abstracts_2006,abstracts_2007,abstracts_2008,abstracts_2009,abstracts_2010,abstracts_2011,abstracts_2012,abstracts_2013,abstracts_2014,abstracts_2015,abstracts_2016,abstracts_2017,abstracts_2018])\n",
    "\n",
    "len(abstracts)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### IPEDS data"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 117,
   "metadata": {},
   "outputs": [],
   "source": [
    "ipeds = pd.read_csv('IPEDS.csv',encoding='ISO-8859-1')"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Filter the data"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 111,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Keeping only first project (not to double count the total cost)\n",
    "\n",
    "projects = projects.groupby(' PROJECT_NUMBER').first().reset_index()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 112,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Filtering by projects which have more than 100,000 FY_TOTAL_COST\n",
    "\n",
    "projects = projects[projects[' FY_TOTAL_COST'] > 100000]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 113,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>PROJECT_NUMBER</th>\n",
       "      <th>Unnamed: 0</th>\n",
       "      <th>PROJECT_ID</th>\n",
       "      <th>PROJECT_TERMS</th>\n",
       "      <th>PROJECT_TITLE</th>\n",
       "      <th>DEPARTMENT</th>\n",
       "      <th>AGENCY</th>\n",
       "      <th>IC_CENTER</th>\n",
       "      <th>PROJECT_START_DATE</th>\n",
       "      <th>PROJECT_END_DATE</th>\n",
       "      <th>...</th>\n",
       "      <th>ORGANIZATION_CITY</th>\n",
       "      <th>ORGANIZATION_STATE</th>\n",
       "      <th>ORGANIZATION_ZIP</th>\n",
       "      <th>ORGANIZATION_COUNTRY</th>\n",
       "      <th>BUDGET_START_DATE</th>\n",
       "      <th>BUDGET_END_DATE</th>\n",
       "      <th>CFDA_CODE</th>\n",
       "      <th>FY</th>\n",
       "      <th>FY_TOTAL_COST</th>\n",
       "      <th>FY_TOTAL_COST_SUB_PROJECTS</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>415302</td>\n",
       "      <td>10434</td>\n",
       "      <td>135501</td>\n",
       "      <td>abstracting; adaptive optics; American; Area;...</td>\n",
       "      <td>ADVANCED TECHNOLOGY SOLAR TELESCOPE (ATST) CON...</td>\n",
       "      <td>NSF</td>\n",
       "      <td>NSF</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1/1/2010</td>\n",
       "      <td>12/31/2017</td>\n",
       "      <td>...</td>\n",
       "      <td>WASHINGTON</td>\n",
       "      <td>DC</td>\n",
       "      <td>20005-3929</td>\n",
       "      <td>UNITED STATES</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>47.082</td>\n",
       "      <td>2010</td>\n",
       "      <td>146000000.0</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>426369</td>\n",
       "      <td>10435</td>\n",
       "      <td>91402</td>\n",
       "      <td>abstracting; Address; Blood Circulation; Goal...</td>\n",
       "      <td>COLLABORATIVE RESEARCH: CRUSTAL ACCRETION AND ...</td>\n",
       "      <td>NSF</td>\n",
       "      <td>NSF</td>\n",
       "      <td>NaN</td>\n",
       "      <td>9/1/2008</td>\n",
       "      <td>8/31/2012</td>\n",
       "      <td>...</td>\n",
       "      <td>NEW YORK</td>\n",
       "      <td>NY</td>\n",
       "      <td>10027-6902</td>\n",
       "      <td>UNITED STATES</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>47.05</td>\n",
       "      <td>2008</td>\n",
       "      <td>420462.0</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>426408</td>\n",
       "      <td>10436</td>\n",
       "      <td>91403</td>\n",
       "      <td>abstracting; Address; Blood Circulation; Goal...</td>\n",
       "      <td>COLLABORATIVE RESEARCH: CRUSTAL ACCRETION AND ...</td>\n",
       "      <td>NSF</td>\n",
       "      <td>NSF</td>\n",
       "      <td>NaN</td>\n",
       "      <td>9/1/2008</td>\n",
       "      <td>8/31/2012</td>\n",
       "      <td>...</td>\n",
       "      <td>SAINT LOUIS</td>\n",
       "      <td>MO</td>\n",
       "      <td>63130-4899</td>\n",
       "      <td>UNITED STATES</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>47.05</td>\n",
       "      <td>2008</td>\n",
       "      <td>535017.0</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>426428</td>\n",
       "      <td>10437</td>\n",
       "      <td>91285</td>\n",
       "      <td>abstracting; Address; Blood Circulation; Goal...</td>\n",
       "      <td>COLLABORATIVE RESEARCH: CRUSTAL ACCRETION AND ...</td>\n",
       "      <td>NSF</td>\n",
       "      <td>NSF</td>\n",
       "      <td>NaN</td>\n",
       "      <td>9/1/2008</td>\n",
       "      <td>8/31/2012</td>\n",
       "      <td>...</td>\n",
       "      <td>HONOLULU</td>\n",
       "      <td>HI</td>\n",
       "      <td>96822-2303</td>\n",
       "      <td>UNITED STATES</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>47.05</td>\n",
       "      <td>2008</td>\n",
       "      <td>461326.0</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>430463</td>\n",
       "      <td>10438</td>\n",
       "      <td>91374</td>\n",
       "      <td>abstracting; Address; Blood Circulation; Goal...</td>\n",
       "      <td>COLLABORATIVE RESEARCH: CRUSTAL ACRETION AND M...</td>\n",
       "      <td>NSF</td>\n",
       "      <td>NSF</td>\n",
       "      <td>NaN</td>\n",
       "      <td>9/1/2008</td>\n",
       "      <td>8/31/2012</td>\n",
       "      <td>...</td>\n",
       "      <td>LA JOLLA</td>\n",
       "      <td>CA</td>\n",
       "      <td>92093-0210</td>\n",
       "      <td>UNITED STATES</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>47.05</td>\n",
       "      <td>2008</td>\n",
       "      <td>139436.0</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>5 rows × 25 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "   PROJECT_NUMBER  Unnamed: 0  PROJECT_ID  \\\n",
       "0          415302       10434      135501   \n",
       "1          426369       10435       91402   \n",
       "2          426408       10436       91403   \n",
       "3          426428       10437       91285   \n",
       "4          430463       10438       91374   \n",
       "\n",
       "                                       PROJECT_TERMS  \\\n",
       "0   abstracting; adaptive optics; American; Area;...   \n",
       "1   abstracting; Address; Blood Circulation; Goal...   \n",
       "2   abstracting; Address; Blood Circulation; Goal...   \n",
       "3   abstracting; Address; Blood Circulation; Goal...   \n",
       "4   abstracting; Address; Blood Circulation; Goal...   \n",
       "\n",
       "                                       PROJECT_TITLE  DEPARTMENT  AGENCY  \\\n",
       "0  ADVANCED TECHNOLOGY SOLAR TELESCOPE (ATST) CON...         NSF     NSF   \n",
       "1  COLLABORATIVE RESEARCH: CRUSTAL ACCRETION AND ...         NSF     NSF   \n",
       "2  COLLABORATIVE RESEARCH: CRUSTAL ACCRETION AND ...         NSF     NSF   \n",
       "3  COLLABORATIVE RESEARCH: CRUSTAL ACCRETION AND ...         NSF     NSF   \n",
       "4  COLLABORATIVE RESEARCH: CRUSTAL ACRETION AND M...         NSF     NSF   \n",
       "\n",
       "   IC_CENTER  PROJECT_START_DATE  PROJECT_END_DATE  ...  ORGANIZATION_CITY  \\\n",
       "0        NaN            1/1/2010        12/31/2017  ...         WASHINGTON   \n",
       "1        NaN            9/1/2008         8/31/2012  ...           NEW YORK   \n",
       "2        NaN            9/1/2008         8/31/2012  ...        SAINT LOUIS   \n",
       "3        NaN            9/1/2008         8/31/2012  ...           HONOLULU   \n",
       "4        NaN            9/1/2008         8/31/2012  ...           LA JOLLA   \n",
       "\n",
       "   ORGANIZATION_STATE   ORGANIZATION_ZIP  ORGANIZATION_COUNTRY  \\\n",
       "0                  DC         20005-3929         UNITED STATES   \n",
       "1                  NY         10027-6902         UNITED STATES   \n",
       "2                  MO         63130-4899         UNITED STATES   \n",
       "3                  HI         96822-2303         UNITED STATES   \n",
       "4                  CA         92093-0210         UNITED STATES   \n",
       "\n",
       "   BUDGET_START_DATE  BUDGET_END_DATE  CFDA_CODE    FY  FY_TOTAL_COST  \\\n",
       "0                NaN              NaN     47.082  2010    146000000.0   \n",
       "1                NaN              NaN      47.05  2008       420462.0   \n",
       "2                NaN              NaN      47.05  2008       535017.0   \n",
       "3                NaN              NaN      47.05  2008       461326.0   \n",
       "4                NaN              NaN      47.05  2008       139436.0   \n",
       "\n",
       "   FY_TOTAL_COST_SUB_PROJECTS  \n",
       "0                         NaN  \n",
       "1                         NaN  \n",
       "2                         NaN  \n",
       "3                         NaN  \n",
       "4                         NaN  \n",
       "\n",
       "[5 rows x 25 columns]"
      ]
     },
     "execution_count": 113,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "projects.head()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Match with IPEDS university names"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 118,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>UNITID</th>\n",
       "      <th>INSTNM</th>\n",
       "      <th>IALIAS</th>\n",
       "      <th>STABBR</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>100654</td>\n",
       "      <td>Alabama A &amp; M University</td>\n",
       "      <td>AAMU</td>\n",
       "      <td>AL</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>100663</td>\n",
       "      <td>University of Alabama at Birmingham</td>\n",
       "      <td></td>\n",
       "      <td>AL</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>100690</td>\n",
       "      <td>Amridge University</td>\n",
       "      <td>Southern Christian University |Regions University</td>\n",
       "      <td>AL</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>100706</td>\n",
       "      <td>University of Alabama in Huntsville</td>\n",
       "      <td>UAH |University of Alabama Huntsville</td>\n",
       "      <td>AL</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>100724</td>\n",
       "      <td>Alabama State University</td>\n",
       "      <td></td>\n",
       "      <td>AL</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   UNITID                               INSTNM  \\\n",
       "0  100654             Alabama A & M University   \n",
       "1  100663  University of Alabama at Birmingham   \n",
       "2  100690                   Amridge University   \n",
       "3  100706  University of Alabama in Huntsville   \n",
       "4  100724             Alabama State University   \n",
       "\n",
       "                                              IALIAS STABBR  \n",
       "0                                               AAMU     AL  \n",
       "1                                                        AL  \n",
       "2  Southern Christian University |Regions University     AL  \n",
       "3              UAH |University of Alabama Huntsville     AL  \n",
       "4                                                        AL  "
      ]
     },
     "execution_count": 118,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "ipeds.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 119,
   "metadata": {},
   "outputs": [],
   "source": [
    "ipeds = ipeds.rename(columns={'INSTNM':' ORGANIZATION_NAME'})"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 123,
   "metadata": {},
   "outputs": [],
   "source": [
    "def normalize_names(name):\n",
    "    name = name.lower()\n",
    "    name = name.strip()\n",
    "    for i in string.punctuation:\n",
    "        name = name.replace(i,'')\n",
    "    name = name.replace(' ','')\n",
    "    return name"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 124,
   "metadata": {},
   "outputs": [],
   "source": [
    "ipeds[' ORGANIZATION_NAME'] = ipeds[' ORGANIZATION_NAME'].apply(normalize_names)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 127,
   "metadata": {},
   "outputs": [],
   "source": [
    "projects_subset = projects[['PROJECT_ID',' ORGANIZATION_NAME']]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 128,
   "metadata": {},
   "outputs": [],
   "source": [
    "projects_ipeds_1 = projects_subset.merge(ipeds,on=' ORGANIZATION_NAME')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 132,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "1154"
      ]
     },
     "execution_count": 132,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "projects_ipeds_1[' ORGANIZATION_NAME'].nunique()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Add additional validated matches\n",
    "\n",
    "names_dictionary = dict.fromkeys(names_to_check)\n",
    "\n",
    "names_dictionary['universityofvirginiamaincampus'] = ['universityofvirginiacharlottesville','universityofvirginia']\n",
    "names_dictionary['ohiostateuniversitymaincampus'] = ['ohiostateuniversityresearchfoundation','ohiostateuniversity','ohiostateuniversityvetmed']\n",
    "names_dictionary['universityofcincinnatimaincampus'] = ['universityofcincinnati']\n",
    "names_dictionary['auburnuniversity'] = ['auburnuniversityatauburn', 'auburnuniversiymaincampus']\n",
    "names_dictionary['theuniversityoftennesseeknoxville'] = ['universityoftennesseeknoxville', 'universityoftennessee', 'universityoftennessee’scenterforcleanproductsandcleantechnologiesandthehealthybuildingnetwork']\n",
    "names_dictionary['universityofsouthcarolinacolumbia'] = ['universityofsouthcarolinaatcolumbia']\n",
    "names_dictionary['texasamuniversitycollegestation'] = ['texasamuniversity']\n",
    "names_dictionary['universityofsouthfloridamaincampus'] = ['universityofsouthflorida']\n",
    "names_dictionary['midwesternuniversityglendale'] = ['midwesternuniversity']\n",
    "names_dictionary['stonybrookuniversity'] = ['stateuniversitynewyorkstonybrook','mathdeptstonybrookuniversity','sunystonybrook','stonybrookbiotechnology','stonybrooktechnologyappliedresearch','thestateuniversityofnewyorkatstonybrook']\n",
    "names_dictionary['universityofthepacific'] = ['universityofthepacificstockton']\n",
    "names_dictionary['universityatbuffalo'] = ['stateuniversityofnewyorkatbuffalo', 'universityatbuffalosuny', 'thestateuniversityofnewyorkatbuffalo', 'universityofbuffalo']\n",
    "names_dictionary['midwesternuniversitydownersgrove'] = ['midwesternuniversity']\n",
    "names_dictionary['northcarolinastateuniversityatraleigh'] = ['northcarolinastateuniversityraleigh','northcarolinastateuniversity']\n",
    "names_dictionary['universityofcoloradoboulder'] = ['universityofcoloradoatboulder','universityofcoloradoboulderdeptofgeologicalsciences','regentsoftheuniversityofcoloradothe','universityofcolorado']\n",
    "names_dictionary['universityofwashingtonseattlecampus'] = ['universityofwashington','universityofwashingtonmechanicalengineering','universityofwashingtonseattle']\n",
    "names_dictionary['indianauniversitypurdueuniversityindianapolis'] = ['indianaunivpurdueunivatindianapolis']\n",
    "names_dictionary['universityofpittsburghpittsburghcampus'] = ['theuniversityofpittsburgh','universityofpittsburgh']\n",
    "names_dictionary['universityofcoloradodenveranschutzmedicalcampus'] = ['universityofcoloradodenver','universityofcoloradodenverhscdenver']\n",
    "names_dictionary['louisianastateuniversityandagriculturalmechanicalcollege'] = ['louisianastateunivaampmcolbatonrouge','louisianastateunivagriculturalcenter']\n",
    "\n",
    "names_dictionary_updated = {k: v for k, v in names_dictionary.items() if v is not None}"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 164,
   "metadata": {},
   "outputs": [],
   "source": [
    "names_dictionary_dataframe = pandas.DataFrame.from_dict(names_dictionary_updated,orient=\"index\").reset_index()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 165,
   "metadata": {},
   "outputs": [],
   "source": [
    "names_dataframe = names_dictionary_dataframe.set_index('index').stack().reset_index()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 166,
   "metadata": {},
   "outputs": [],
   "source": [
    "names_dataframe = names_dataframe.rename(columns={'index':' ORGANIZATION_NAME'})"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 167,
   "metadata": {},
   "outputs": [],
   "source": [
    "names_dataframe_finalized = ipeds_finalized.merge(names_dataframe,on=' ORGANIZATION_NAME')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 168,
   "metadata": {},
   "outputs": [],
   "source": [
    "names_dataframe_finalized = names_dataframe_finalized.drop(['index','level_1'],axis=1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 170,
   "metadata": {},
   "outputs": [],
   "source": [
    "names_dataframe_finalized = names_dataframe_finalized.rename(columns={' ORGANIZATION_NAME':'original_name',0:' ORGANIZATION_NAME'})"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 171,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>UNITID</th>\n",
       "      <th>CTOTALT</th>\n",
       "      <th>original_name</th>\n",
       "      <th>IALIAS</th>\n",
       "      <th>STABBR</th>\n",
       "      <th>ORGANIZATION_NAME</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>204796</td>\n",
       "      <td>3202</td>\n",
       "      <td>ohiostateuniversitymaincampus</td>\n",
       "      <td></td>\n",
       "      <td>OH</td>\n",
       "      <td>ohiostateuniversityresearchfoundation</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>204796</td>\n",
       "      <td>3202</td>\n",
       "      <td>ohiostateuniversitymaincampus</td>\n",
       "      <td></td>\n",
       "      <td>OH</td>\n",
       "      <td>ohiostateuniversity</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>204796</td>\n",
       "      <td>3202</td>\n",
       "      <td>ohiostateuniversitymaincampus</td>\n",
       "      <td></td>\n",
       "      <td>OH</td>\n",
       "      <td>ohiostateuniversityvetmed</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>228723</td>\n",
       "      <td>2886</td>\n",
       "      <td>texasamuniversitycollegestation</td>\n",
       "      <td>Texas A&amp;M | TAMU</td>\n",
       "      <td>TX</td>\n",
       "      <td>texasamuniversity</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>236948</td>\n",
       "      <td>2674</td>\n",
       "      <td>universityofwashingtonseattlecampus</td>\n",
       "      <td>UW-Seattle, UDub, UW, Washington</td>\n",
       "      <td>WA</td>\n",
       "      <td>universityofwashington</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   UNITID  CTOTALT                        original_name  \\\n",
       "0  204796     3202        ohiostateuniversitymaincampus   \n",
       "1  204796     3202        ohiostateuniversitymaincampus   \n",
       "2  204796     3202        ohiostateuniversitymaincampus   \n",
       "3  228723     2886      texasamuniversitycollegestation   \n",
       "4  236948     2674  universityofwashingtonseattlecampus   \n",
       "\n",
       "                             IALIAS STABBR  \\\n",
       "0                                       OH   \n",
       "1                                       OH   \n",
       "2                                       OH   \n",
       "3                  Texas A&M | TAMU     TX   \n",
       "4  UW-Seattle, UDub, UW, Washington     WA   \n",
       "\n",
       "                       ORGANIZATION_NAME  \n",
       "0  ohiostateuniversityresearchfoundation  \n",
       "1                    ohiostateuniversity  \n",
       "2              ohiostateuniversityvetmed  \n",
       "3                      texasamuniversity  \n",
       "4                 universityofwashington  "
      ]
     },
     "execution_count": 171,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "names_dataframe_finalized.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 172,
   "metadata": {},
   "outputs": [],
   "source": [
    "projects_ipeds_2 = projects_subset.merge(names_dataframe_finalized,on=' ORGANIZATION_NAME')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 176,
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/anaconda3/lib/python3.7/site-packages/ipykernel_launcher.py:1: FutureWarning: Sorting because non-concatenation axis is not aligned. A future version\n",
      "of pandas will change to not sort by default.\n",
      "\n",
      "To accept the future behavior, pass 'sort=False'.\n",
      "\n",
      "To retain the current behavior and silence the warning, pass 'sort=True'.\n",
      "\n",
      "  \"\"\"Entry point for launching an IPython kernel.\n"
     ]
    }
   ],
   "source": [
    "projects_ipeds_combined = pd.concat([projects_ipeds_1,projects_ipeds_2])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 180,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "348115"
      ]
     },
     "execution_count": 180,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "len(projects_ipeds_combined)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 181,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "1196"
      ]
     },
     "execution_count": 181,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "projects_ipeds_combined[' ORGANIZATION_NAME'].nunique()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 182,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "348115"
      ]
     },
     "execution_count": 182,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "len(projects_ipeds_combined)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Text analysis (Topic modeling)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 183,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Drop missing abstracts\n",
    "abstracts = abstracts.dropna()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 184,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "1032895"
      ]
     },
     "execution_count": 184,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "len(abstracts)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 185,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Merge abstracts with Project ID of IPEDS universities\n",
    "merged_abstracts = abstracts.merge(projects_ipeds_combined,on='PROJECT_ID')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 186,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "345077"
      ]
     },
     "execution_count": 186,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "len(merged_abstracts)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 188,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Get only the text of abstracts\n",
    "merged_abstracts_list = merged_abstracts[' ABSTRACT'].values.tolist()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### LDA method - Latent Dirichlet Allocation\n",
    "\n",
    "Latent Dirichlet Allocation is a probabilistic topic model that is used for discovering abstract topics from a collection of documents.\n",
    "\n",
    "LDA model takes as input a corpus (a collection of text documents). Every text document is tokenized to become a sequence of words (tokens). All unique words across a given corpus are saved as a vocabulary. Text documents are then converted to a matrix of token counts (how often a given unique word from a vocabulary appears in a given text document), e.g.:\n",
    "\n",
    "\n",
    "|doc# / unique words| 'science' | 'research' | 'cell' | 'DNA' | 'gene'|\n",
    "|----------|-----------|------------|--------|-------|-------|\n",
    "|document 1|     0     |     0      |     1  |    5  |    7  |\n",
    "|document 2|     1     |     5      |     0  |    0  |    0  |\n",
    "|document 3|     0     |     2      |     5  |    0  |    0  |  \n",
    "\n",
    "\n",
    "The LDA model then finds for each topic a distribution over the words, i.e. the probability of a word appearing in a given topic, and then maps a probability of a topic being assigned to a given document.\n",
    " \n",
    "More here: https://scikit-learn.org/stable/modules/decomposition.html#latentdirichletallocation"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 85,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Convert a collection of text documents to a matrix of token counts\n",
    "# Every token is a unique word, and the matrix consists of a count of a given word (token) in a given document\n",
    "\n",
    "tf_vectorizer = CountVectorizer(stop_words='english') # remove English stopwords (semantically-vacuous words, such as 'the', 'and', etc.)\n",
    "tf = tf_vectorizer.fit_transform(merged_abstracts_list)\n",
    "tf_feature_names = tf_vectorizer.get_feature_names() # unique words (vocabulary)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 189,
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/anaconda3/lib/python3.7/site-packages/sklearn/decomposition/online_lda.py:314: DeprecationWarning: n_topics has been renamed to n_components in version 0.19 and will be removed in 0.21\n",
      "  DeprecationWarning)\n"
     ]
    }
   ],
   "source": [
    "lda = LatentDirichletAllocation(n_topics=10, random_state=0).fit(tf)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 190,
   "metadata": {},
   "outputs": [],
   "source": [
    "lda_W = lda.transform(tf) # get topics to documents matrix\n",
    "lda_H = lda.components_ # get word to topics matrix"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 193,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Topic 0:\n",
      "----------------------------\n",
      "disease studies lung aim specific determine role function effects inflammation\n",
      "----------------------------\n",
      "Topic 1:\n",
      "----------------------------\n",
      "imaging protein new structure proteins molecular structural methods using develop\n",
      "----------------------------\n",
      "Topic 2:\n",
      "----------------------------\n",
      "cells cell bone stem human tissue disease clinical imaging development\n",
      "----------------------------\n",
      "Topic 3:\n",
      "----------------------------\n",
      "project research data new students systems high methods models develop\n",
      "----------------------------\n",
      "Topic 4:\n",
      "----------------------------\n",
      "brain cognitive neurons neural disorders effects studies mechanisms behavioral specific\n",
      "----------------------------\n",
      "Topic 5:\n",
      "----------------------------\n",
      "health study risk care data treatment use intervention research patients\n",
      "----------------------------\n",
      "Topic 6:\n",
      "----------------------------\n",
      "cell cells signaling gene protein expression genes function mechanisms molecular\n",
      "----------------------------\n",
      "Topic 7:\n",
      "----------------------------\n",
      "injury brain ad stress aim stroke induced determine pain model\n",
      "----------------------------\n",
      "Topic 8:\n",
      "----------------------------\n",
      "research training program clinical university dr center students faculty development\n",
      "----------------------------\n",
      "Topic 9:\n",
      "----------------------------\n",
      "cancer cells cell tumor immune infection specific hiv aim human\n",
      "----------------------------\n"
     ]
    }
   ],
   "source": [
    "# View the list of topics (10 top words per topic)\n",
    "\n",
    "for topic_idx, topic in enumerate(lda_H):\n",
    "    print(\"Topic %d:\" % (topic_idx))\n",
    "    print('----------------------------')\n",
    "    print(\" \".join([tf_feature_names[i]\n",
    "                for i in topic.argsort()[:-10 - 1:-1]]))\n",
    "    print('----------------------------')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "# View a top document related to a given topic\n",
    "\n",
    "for topic_idx, topic in enumerate(lda_H):\n",
    "    print('--------------------')\n",
    "    print(\"Topic %d:\" % (topic_idx))\n",
    "    print('--------------------')\n",
    "    print(\" \".join([tf_feature_names[i]\n",
    "                    for i in topic.argsort()[:-10 - 1:-1]]))\n",
    "    top_doc_indices = np.argsort(lda_W[:,topic_idx] )[::-1][0:1]\n",
    "    for doc_index in top_doc_indices:\n",
    "        print('--------------------')\n",
    "        print(merged_abstracts_list[doc_index])"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### NMF method - Non-negative matrix factorization\n",
    "\n",
    "NMF is another model used for topic extraction - while the LDA model uses raw counts of unique words per document, NMF model uses a normalized representation of those raw counts (TF-IDF representation)\n",
    "\n",
    "TF stands for term-frequency and TF-IDF is term-frequency times inverse document-frequency. In other words, we are not only looking for how often a word appears in a given document, but also whether this particular word is distinct across all the collections of documents (corpus). For example, intuitively we understand that words like \"often\" or \"use\" are more frequently encountered, but they are less informative (more semantically-vacuous) if we want to discern a particular topic of a document, as they might be frequently encounter across all text documents in a corpus. On the other hand, words which we will see less frequently across a collection of document might indicate that those words are specific to a particular document, and, therefore, constitute a basis for a topic. \n",
    "\n",
    "More here: \n",
    "\n",
    "- https://scikit-learn.org/stable/modules/decomposition.html#non-negative-matrix-factorization-nmf-or-nnmf\n",
    "- https://scikit-learn.org/stable/modules/generated/sklearn.feature_extraction.text.TfidfVectorizer.html\n",
    "- https://scikit-learn.org/stable/modules/generated/sklearn.feature_extraction.text.TfidfTransformer.html#sklearn.feature_extraction.text.TfidfTransformer"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 194,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Convert a collection of raw documents to a matrix of TF-IDF features\n",
    "vectorizer = TfidfVectorizer(stop_words='english')\n",
    "tfidf = vectorizer.fit_transform(merged_abstracts_list)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 195,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Get feature names\n",
    "vectorizer_feature_names = vectorizer.get_feature_names()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 196,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Run the model with 10 topics\n",
    "nmf = NMF(n_components=10).fit(tfidf)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 198,
   "metadata": {},
   "outputs": [],
   "source": [
    "nmf_W = nmf.transform(tfidf) # get topics to documents matrix\n",
    "nmf_H = nmf.components_ # get word to topics matrix"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 199,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([7.30465376e-03, 0.00000000e+00, 2.77492174e-03, 1.63827294e-03,\n",
       "       4.10470794e-05, 2.31870480e-05, 1.86209741e-04, 1.36614281e-03,\n",
       "       1.23105181e-03, 2.88509063e-03])"
      ]
     },
     "execution_count": 199,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "nmf_W[0]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 202,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "10"
      ]
     },
     "execution_count": 202,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "len(nmf_H)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 203,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Topic 0:\n",
      "----------------------------\n",
      "data project research systems new methods materials computational applications design\n",
      "----------------------------\n",
      "Topic 1:\n",
      "----------------------------\n",
      "training program research trainees faculty clinical biology postdoctoral medicine scientists\n",
      "----------------------------\n",
      "Topic 2:\n",
      "----------------------------\n",
      "cells cell immune stem tumor responses infection il differentiation lung\n",
      "----------------------------\n",
      "Topic 3:\n",
      "----------------------------\n",
      "health care intervention risk children study outcomes treatment patients clinical\n",
      "----------------------------\n",
      "Topic 4:\n",
      "----------------------------\n",
      "hiv infection infected aids viral virus drug transmission prevention antiretroviral\n",
      "----------------------------\n",
      "Topic 5:\n",
      "----------------------------\n",
      "cancer breast tumor prostate tumors cancers clinical patients imaging metastasis\n",
      "----------------------------\n",
      "Topic 6:\n",
      "----------------------------\n",
      "students stem science program research student engineering education graduate learning\n",
      "----------------------------\n",
      "Topic 7:\n",
      "----------------------------\n",
      "brain neural neurons cognitive memory visual synaptic cortex learning cortical\n",
      "----------------------------\n",
      "Topic 8:\n",
      "----------------------------\n",
      "dna gene genes genetic genome expression rna human genomic chromatin\n",
      "----------------------------\n",
      "Topic 9:\n",
      "----------------------------\n",
      "protein proteins signaling membrane function molecular muscle mitochondrial mechanisms aim\n",
      "----------------------------\n"
     ]
    }
   ],
   "source": [
    "# View the list of topics (10 top words per topic)\n",
    "\n",
    "for topic_idx, topic in enumerate(nmf_H):\n",
    "    print(\"Topic %d:\" % (topic_idx))\n",
    "    print('----------------------------')\n",
    "    print(\" \".join([vectorizer_feature_names[i]\n",
    "                for i in topic.argsort()[:-10 - 1:-1]]))\n",
    "    print('----------------------------')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 205,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "--------------------\n",
      "Topic 0:\n",
      "--------------------\n",
      "data project research systems new methods materials computational applications design\n",
      "--------------------\n",
      "Recent revolutions in data availability have radically altered activities across many fields within science, industry, and government. For instance, contemporary simulations medication properties can require the computational power of entire data centers, and recent efforts in astronomy will soon generate the largest image datasets in history. In such extreme environments, the only viable path forward for scientific discovery hinges on the development and exploitation of next-generation computational cyberinfrastructure of supercomputers and software. The development of this new computational infrastructure demands significant engineering resources, so it is paramount to maximize the infrastructure's potential for high impact and wide adoption across as many technical domains as possible. Unfortunately, despite this necessity, existing development processes often produce software that is limited to specific hardware, or requires additional expertise to use properly, or is overly specialized to a specific problem domain. Such  single-use  software tools are limited in scope, leading to underutilization by the wider scientific community. In contrast, this project seeks to develop methods and software for computer-based scientific analysis that are sufficiently powerful, flexible and accessible to (i) enable domain experts to achieve significant advancements within their domains, and (ii) enable innovative use of advanced computational techniques in unexpected scientific, technological and industrial applications. This project will apply these tools to a wide variety of specific scientific challenges faced by various research teams in astronomy, medicine, and energy management. These teams plan on using the proposed work to map out new star systems, develop new life-saving medications, and design new power systems that will deliver more energy to a greater number of homes and businesses at a lower cost than existing systems. Finally, this project will seek to leave a legacy of sustained societal benefit by educating students and practitioners in the broader scientific and engineering communities via exposure to state-of-the-art computational techniques. Through close collaboration with research teams in statistical astronomy, pharmacometrics, power systems optimization, and high-performance computing, this project will deliver cyberinfrastructure that will effectively and effortlessly enable the next generation of computer-based scientific analysis and discovery. To ensure the practical applicability of the developed cyberinfrastructure, the project will focus on three target scientific applications: (i) economically viable decarbonization of electrical power networks, (ii) real-time analysis of extreme-scale astronomical image data, and (iii) pharmacometric modeling and simulation for drug analysis and discovery. While tackling these specific problems will constitute an initial stress test of the proposed cyberinfrastructure, it is the ultimate goal of the project that the developed tools be sufficiently performant, accessible, composable, flexible and adaptable to be applied to the widest possible range of problem domains. To achieve this vision, the project will build and improve various software tools for computational optimization, machine learning, parallel computing, and model-based simulation. Particular attention will be paid to the proposed cyberinfrastructure's composability with new and existing tools for scientific analysis and discovery. The pursuit of these goals will require the design and implementation of new programming language abstractions to allow close integration of high-level language features with low-level compiler optimizations. Furthermore, maximally exploiting proposed cyberinfrastructure will require research into new methods that combine state-of-the-art techniques from optimization, machine learning, and high-performance computing.This award reflects NSF's statutory mission and has been deemed worthy of support through evaluation using the Foundation's intellectual merit and broader impacts review criteria.\n",
      "--------------------\n",
      "Topic 1:\n",
      "--------------------\n",
      "training program research trainees faculty clinical biology postdoctoral medicine scientists\n",
      "--------------------\n",
      "DESCRIPTION (provided by applicant): The University of Washington (UW) program trains physician-scientists and post-doctoral PhD scientists to perform clinically-relevant research in pulmonary and critical care medicine. An interdisciplinary approach is used to prepare trainees for academic careers characterized by independently funded research and a commitment to training others. The program is distinguished by the quality and expertise of the training faculty,the integration of multiple disciplines and diverse research methodologies, and achievements in developing successful scientists. Research training is conducted through two primary pathways: Basic Science and Clinical Outcomes. Within each pathway, experienced and committed mentors provide a rich range of research opportunities, a research study group exposes the trainee to a broader range of methodology and research topics, and didactic course work enriches the research training experience. The Basic Science pathway provides trainees with the opportunity to master a wide- variety of cutting edge research methodologies and techniques. The Clinical Outcomes pathway generally includes completion of an MPH or MSc program in either the Department of Epidemiology or Health Services. Training in translational research occurs at the confluence of the two pathways, with select trainees beginning in one of the primary training pathways and receiving cross-training in the other. Translational training is further supported through tailored mentoring committees and research projects. The program has developed and articulated core principles of mentoring that are used to guide and rigorously evaluate training. Though a commitment to continuously review and improve our program, the training program has kept pace with advancing biomedical research and needs of our trainees.  The program features a structured process to aid fellows in selecting research mentors and projects. Prior to beginning research training, trainees 1) are counseled by training faculty leadership, 2) participate in a senior fellow driven research symposium and 3) have a week in the fall during which they are relieved of all clinical responsibilities to conduct interviews withpotential mentors. Once in the research training program, mentoring committees track the fellows' progress in several forums, including informally at laboratory meetings as well as in more structure research groups, a UW-wide pulmonary research conference and at regional and national meetings. Training includes instruction in manuscript and grant writing and a review process for research presentations. A series of evaluation metrics have been developed and implemented to monitor progress of the trainees, mentors, and program leadership.\n",
      "--------------------\n",
      "Topic 2:\n",
      "--------------------\n",
      "cells cell immune stem tumor responses infection il differentiation lung\n",
      "--------------------\n",
      "Project Summary B cells are important for the generation of protective immunity and function at multiple discrete stages. The unique role that B cells play as antibody-producing cells is appreciated, however the other functions of B cells as antigen presenting cells, lymphoid tissue organizers and cytokine-producing effector or regulatory cells are much less understood and rarely studied. Recent work from our lab showed that cytokine producing effector B cells play crucial roles in the development of protective humoral and cellular immunity to infectious agents. We therefore hypothesized that there are specialized populations of B cells that have the ability to secrete cytokines and regulate immune responses. To address this hypothesis, we developed an in vitro culture system using primary mouse B cell to generate different classes of cytokine producing effector B cells. We characterized these in vitro generated cells and found markers that we subsequently used to identify the cytokine producing B cell subpopulations in vivo. For example, using markers identified in our in vitro cultures, we can now identify IFN&#947; producing B cell effectors in vivo and showed that these B cells are specifically induced in response to influenza infection and are elevated in number in some mouse models of autoimmunity. Thus, this approach has allowed us for the first time to visualize B cell effectors in vivo and has opened the door to functional and mechanistic studies that will reveal the roles for these cells in infectious and autoimmune disease. Despite the significant progress that we have made in our studies of mouse effector B cells, little is known about their human B cell counterparts. In fact, only very rudimentary studies have been conducted to date with human B cells. From these limited studies it is clear that human B cells have the potential to make cytokines under some stimulation conditions. However, these studies have been conducted with bulk peripheral blood B cells, thus the effector human B cells subsets remain to be identified. The goals of this proposal are to (i) to develop an in vitro culture system to phenotypically and functionally characterize human effector B cells and (ii) To use the information that we have obtained from the in vitro cultures to identify effector B cells in samples from healthy and autoimmune individuals.\n",
      "--------------------\n",
      "Topic 3:\n",
      "--------------------\n",
      "health care intervention risk children study outcomes treatment patients clinical\n",
      "--------------------\n",
      "DESCRIPTION (provided by applicant): This application for a randomized trial to evaluate a health behavior intervention for reducing health risk behaviors and promoting health in adolescents with major depressive disorder (MDD) is being submitted in response to RFA-MH-06-002 inviting research on health behavior change in mental disorders modeled from HIV interventions. MDD in adolescence is a common and impairing disorder which leads to significant disability, morbidity, and mortality. Health risk behaviors are frequently comorbid with adolescent MDD, adding to the personal, social, and societal burden of the disorder. Effective interventions for reducing health risk behavior in adolescent MDD are important for preventing negative health consequences and improving both health and mental health outcomes. The proposal builds on our group's expertise in behavioral interventions for HIV prevention (Rotheram-Borus) and primary care interventions for depressed adolescents (Asarnow). We will enroll 300 adolescents with MDD identified through screening at the time of a primary care visit. Adolescents will be randomized to either 1) the health behavior intervention, or 2) usual care. The intervention targets four major areas of health risk behavior: tobacco use; alcohol and drug use; sexual activity; and obesity. Based on our prior HIV preventive interventions and our work integrating behavioral interventions for adolescent depression within primary health care services, the intervention employs a collaborative care model, with a Care Manager supporting the primary care provider and delivering a 10-session cognitive-behavioral health education intervention aimed at reducing health risk behaviors and promoting and maintaining positive health behaviors. Like successful HIV prevention programs, the intervention addresses multiple risk factors simultaneously, intervenes at multiple system levels (individual, family, organization), and emphasizes linking youth to care. Outcomes are monitored at baseline and at 6 and 12-month follow-ups. We hypothesize that adolescents randomized to the intervention, compared to adolescents in usual care, will have fewer health risk behaviors (our primary outcome) and improved secondary outcomes (depression, satisfaction with care, and quality of life/functioning). Results will provide critical guidance to the field regarding strategies for improving health and reducing health risk behaviors in adolescents with MDD.\n",
      "--------------------\n",
      "Topic 4:\n",
      "--------------------\n",
      "hiv infection infected aids viral virus drug transmission prevention antiretroviral\n",
      "--------------------\n",
      "DESCRIPTION (provided by applicant): The overarching goals of our renewal proposal are to develop an integrated program to further our ability to provide evidenced-based, potent antiretroviral therapy (ART) to patients with HIV-2 infection. Compared to HIV-1, HIV-2 infection is characterized by a longer asymptomatic stage, lower plasma viral loads, slower decline in CD4 count, decreased mortality rate due to AIDS, lower rates of mother to child transmission, and lower rates genital shedding and sexual transmission. In West Africa, where both HIV-1 and HIV-2 co- circulate, between 1-2 million individuals are infected with HIV-2 and a significant proportion are co-infected with both HIV-1 and HIV-2. Despite the relatively attenuated disease course of HIV-2, a significant minority of untreated individuals will progress to clinical AIDS or death without ART and as will the majority of those dually infected with HIV-1 and HIV-2. Through local and global initiatives, antiretroviral therapy is becoming increasingly available in resource-limited West Africa. Because HIV-2 is intrinsically resistant to non-nucleoside reverse transcriptase inhibitors and may have partial resistance to some protease inhibitors (PI), treating HIV-2 and HIV-1/HIV-2 dual infection presents distinct challenges. This is especially problematic in resource-limited settings where there is limited choice and availability of 1st- line NRTI-PI based regimens as well as subsequent 2nd- line and salvage regimens in those individuals with clinical progression, immuno-virologic failure or antiretroviral (ARV) toxicities. During the initial period of our grant proposal we (and others) have made substantial progress in furthering our understanding ART for HIV-2 in ARV-naove adults as well as HIV-2 ARV-resistance. However, to date, we remain largely ignorant about the long-term outcomes of ART in HIV-2 infected people, we are in urgent need for assessment of new classes antiretrovirals for HIV-2 and we lack even rudimentary studies on ARV-regimens to treat HIV-1/HIV-2 dual infection, or whether ARV treatment outcomes using NRTI-PI based regimens are different than HIV-2 single infection. Our Renewal proposal has the following specific aims: AIM 1: Long-term outcomes of ART for HIV-2 infection in Senegal: Determine long- term HIV/AIDS associated outcomes and ARV-associated complications in HIV-2 infected individuals treated with ART for >2 years. Assessment of the frequency, causes and outcomes of switching to 2nd line and salvage ARV regimens for HIV-2 infection. AIM 2: To determine the potential utility and susceptibility of HIV-2 to new ARV classes: the integrase inhibitors and the CCR5 co-receptor entry inhibitors. AIM 3: To compare the clinical, virologic and immunologic outcomes associated with ART using NRTI+PI based regimens in a longitudinal prospective cohort of 50 HIV-1/HIV-2 dually infected ARV-naove subjects and a longitudinal prospective cohort of 50 HIV-2 ARV-naove singly infected subjects. Our Renewal proposal will build on a strong ongoing collaboration between the University of Washington and the Universite Cheikh Anta Diop de Dakar, Senegal to further our understanding and provide evidence-based ART and care for HIV-2 infected people.  PUBLIC HEALTH RELEVANCE: In West Africa, two distinct AIDS viruses (HIV-1 and HIV-2) are found, and some people become infected by both types. Because HIV-1 and HIV-2 infection have different natural histories (with HIV-2 being less aggressive) and different antiretroviral drug susceptibilities (with HIV-2 being more drug resistant), treatment for HIV-2 and dual HIV-1/HIV-2 infection is clinically challenging. Understanding how to better treat HIV-2 and dual HIV-1/HIV-2 infection is an import public health priority in West Africa.\n",
      "--------------------\n",
      "Topic 5:\n",
      "--------------------\n",
      "cancer breast tumor prostate tumors cancers clinical patients imaging metastasis\n",
      "--------------------\n",
      "The SEER Program was initiated in 1972 in response to requirements of the National Cancer Program for assessing the magnitude of the cancer burden in the United States, and for identifying factors related to cancer risk and/or patient survival. The SEER Program has among its objectives: 1. \tTo assemble and report, on a periodic basis, estimates of cancer incidence, especially among the following key cancer sites: breast cancer, lung cancer, colorectal cancer, prostate cancer, pancreatic cancer, and urinary bladder cancer.2. \tTo monitor annual cancer incidence trends to identify unusual changes in specific forms of cancer occurring in population subgroups defined by geographic, demographic, and social characteristics. 3. \tTo provide continuing information on changes over time in extent of disease at diagnosis, trends in therapy, and changes in cancer patient survival. 4. \tTo identify the occurrence of possible iatrogenic cancers, i.e., cancers that are caused by cancer therapy. 5. \tTo serve as a research resource to the National Cancer Institute, and conduct studies dealing with current cancer control issues as well as problems related to the operation of the SEER Program.\n",
      "--------------------\n",
      "Topic 6:\n",
      "--------------------\n",
      "students stem science program research student engineering education graduate learning\n",
      "--------------------\n",
      "The Historically Black Colleges and Universities Undergraduate Program (HBCU-UP) through Targeted Infusion Projects supports the development, implementation, and study of evidence-based innovative models and approaches for improving the preparation and success of HBCU undergraduate students so that they may pursue STEM graduate programs and/or careers. The project at Kentucky State University seeks to undertake institutional reform and establish transformational strategies to strengthen and enhance STEM teaching, learning, and research and to improve students' access to and retention in STEM programs. Kentucky State University enrolls a significant number of students from groups underrepresented in STEM - minority students, low-income students, and non-traditional students, such as home-schooled students and students returning to college.The project seeks to enhance the teaching pedagogies and research capacity in STEM fields, fostering a competitive learning and research environment, and developing new project-based and inquiry-based curricula and programs that will provide academic support to the students. The specific objectives of the project are to: 1) increase the enrollment of students into the STEM programs; 2) develop experiential research projects to enhance students' opportunities in a broad range of scientific inquiry; 3) enhance STEM curricula to address the diverse backgrounds and learning styles of the students; and 4) develop student retention, faculty development, and research enhancement programs. The project is projected to impact 250 students at Kentucky State University, as well as 60 pre-college or high school students.\n",
      "--------------------\n",
      "Topic 7:\n",
      "--------------------\n",
      "brain neural neurons cognitive memory visual synaptic cortex learning cortical\n",
      "--------------------\n",
      "DESCRIPTION (provided by applicant): Over the past 50 years a tremendous amount has been learned about how neurons in different parts of the brain respond to incoming sensory signals and send out commands to move our bodies. Despite these achievements, we are far from a complete understanding of brain function and alleviation of most brain disorders. A fundamental challenge that must be addressed is the need to study the system simultaneously at more than one scale. On the one hand, it is essential that processing by single neurons be understood. Yet it is also critical to elucidate the ways in which information is distributed across neurons and brain areas and integrated to give rise to unitary percepts and motor acts. Microelectrode recordings of individual neurons are highly  local ; it is difficult to extrapolate from single cell recordings to interacting populations. On the other hand, whole brain imaging techniques such as functional magnetic resonance imaging (fMRI) sacrifice both spatial and temporal resolution to achieve their global view. While such methods have helped reveal patterns of brain activity associated with various perceptual or motor states, the loss in spatial resolution (millimeters vs. microns) and temporal resolution (seconds vs. milliseconds), while good for human brain imaging, make direct examination of neural circuits by these more global techniques extremely difficult. This application seeks funding to obtain a state-of-the-art recording system that will bridge the local-global gap. The device gives the capability to record simultaneously from hundreds of individual neurons. At the same time, because there are two synchronized recording subsystems, it is possible to examine brain activity and interactions between populations of neurons in any two areas of the brain. The neural activity to be studied by the major users is patterns spread across individual visual and motor areas of cerebral cortex, patterns between two visual or two motor areas, and patterns between a visual area and a motor area. The experiments will be conducted using non-human primates trained to perform visual and/or motor tasks. Two microelectrode arrays, each holding 100 electrodes will be implanted in brain regions of particular interest. Recordings will be made while animals perform trained tasks. The data will reveal single-cell spiking and LFP relationships with perception and behavior, temporal relationships between active neurons, and the relationships between areas within and between the visual and motor systems. These studies, made possible by the shared instrument, will lead to major advances in our understanding of visual perception, motor coding, and visuo-motor integration for behavior. It is this type of information that is critical if one is to alleviate brain disorders associated with trauma or disease.\n",
      "--------------------\n",
      "Topic 8:\n",
      "--------------------\n",
      "dna gene genes genetic genome expression rna human genomic chromatin\n",
      "--------------------\n",
      "DESCRIPTION (provided by applicant): Most psychiatric disorders are not due to mutations in a single gene but rather involve cellular pathways under control of many genes and molecular signals. Recent studies point to the fact that complex epigenetic mechanisms regulating gene activity 'above' the genetic nucleotide sequence may be involved as well. The best understood mechanism of epigenetic modification is DNA methylation. In this genome-wide study we will examine the role of DNA methylation in schizophrenia susceptibility. Our study consists of a genome-wide discovery and replication phase to identify CpG loci in the human genome that are under epigenetic control and involved in disease susceptibility, followed by locus-specific validation in large schizophrenia cohorts. Our systematic approach for identifying candidate CpG loci involved in disease also includes study of general features of DNA methylation such as age, gender and genetic controls. The genome-wide effort with comparative analyses of multiple brain regions of patients and controls will provide a unique opportunity to establish what role DNA methylation plays in vulnerability to develop schizophrenia and perhaps other psychiatric traits. Public Health Relevance: Biochemical modifications of DNA and chromosome structure provide heritable information that is not encoded in the DNA sequence itself, but is likely to play a role in disease susceptibility. We will screen the human genome of schizophrenia patients and unaffected control subjects in order to identify these sites involved in disease. This will lead to a better understanding of the genetic basis of schizophrenia.\n",
      "--------------------\n",
      "Topic 9:\n",
      "--------------------\n",
      "protein proteins signaling membrane function molecular muscle mitochondrial mechanisms aim\n",
      "--------------------\n",
      "DESCRIPTION (provided by applicant): G proteins ¿? subunits play a central role in G-protein coupled receptor (GPCR)-mediated signal transduction. They act as cofactors in the receptor-mediated activation process as well as playing direct roles in signal transfer to downstream targets. Considerable data has accumulated in number of systems that excess ¿? signaling has pathological consequences and that manipulation of ¿? subunit signaling could be an effective therapeutic strategy in heart failure as well as other diseases. We developed a novel targeting strategy for selective manipulation of G protein ¿? subunit signaling pathways by selectively blocking ¿? -subunit binding interactions with functional protein partners using small molecules. In the previous funding period we defined the binding modes for several compounds by surface plasmon resonance (SPR) coupled with site directed mutagenesis and solved the co-crystal structure of M201 bound to the hot spot of G¿?. These data confirmed a direct mechanism for binding to G¿? that influences protein-protein interactions and support our overall hypothesis that small molecules selectively modulate downstream effectors signaling by binding to different subsites on the G¿? hotspot. Additionally, we published results demonstrating efficacy and specificity of these compounds in cellular and animal models of heart failure, inflammation and morphine- dependent analgesia. In the experiments proposed in this application we will continue to explore the fundamental mechanisms underlying binding and selectivity of these ¿? binding compounds. Specific aim 1 will focus on mutagenesis and x-ray crystallography to identify multiple binding modes within the G¿? hotspot that contribute to selectivity. Specific aim 2 will explore the mechanism for compound-dependent G¿? subunit activation. Specific aim 3 will explore specificity and mechanism of action in intact cells. Successful completion of the proposed experiments will lead to a thorough understanding of a the mechanism of action of a new family of molecules that target G23 signaling that have potential uses in dissecting the mechanisms of action of GPCR stimulated signaling and providing the basis for novel therapeutic approaches.  PUBLIC HEALTH RELEVANCE: G protein coupled receptors (GPCRs) are a major class of transmembrane receptors responsible for recognition of a large class of diverse ligands. Here we propose investigation of selective small molecule inhibitors of G protein ¿? subunits identified in our laboratory which could be used to inhibit multiple GPCRs and modify actions of existing GPCR directed pharmaceuticals. Results of these experiments will help to validate this alternate approach to modification of signaling pathways downstream of GPCRs that could ultimately lead to development of novel therapeutics.\n"
     ]
    }
   ],
   "source": [
    "# View a top document related to a given topic\n",
    "\n",
    "for topic_idx, topic in enumerate(nmf_H):\n",
    "    print('--------------------')\n",
    "    print(\"Topic %d:\" % (topic_idx))\n",
    "    print('--------------------')\n",
    "    print(\" \".join([vectorizer_feature_names[i]\n",
    "                    for i in topic.argsort()[:-10 - 1:-1]]))\n",
    "    top_doc_indices = np.argsort(nmf_W[:,topic_idx] )[::-1][0:1]\n",
    "    for doc_index in top_doc_indices:\n",
    "        print('--------------------')\n",
    "        print(merged_abstracts_list[doc_index])"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Choosing results"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "By comparing the outputs of LDA and NMF models, the results of NMF model appear to be more coherent within one topic and also in relation to the context of documents associated with it. Therefore, we will take the top 10 topics from the NMF model output, and we will map results back to the abstracts to identify top 5 topics per university"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 208,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Topic 0:\n",
      "data project research systems new methods materials computational applications design\n",
      "----------------------------\n",
      "Topic 1:\n",
      "training program research trainees faculty clinical biology postdoctoral medicine scientists\n",
      "----------------------------\n",
      "Topic 2:\n",
      "cells cell immune stem tumor responses infection il differentiation lung\n",
      "----------------------------\n",
      "Topic 3:\n",
      "health care intervention risk children study outcomes treatment patients clinical\n",
      "----------------------------\n",
      "Topic 4:\n",
      "hiv infection infected aids viral virus drug transmission prevention antiretroviral\n",
      "----------------------------\n",
      "Topic 5:\n",
      "cancer breast tumor prostate tumors cancers clinical patients imaging metastasis\n",
      "----------------------------\n",
      "Topic 6:\n",
      "students stem science program research student engineering education graduate learning\n",
      "----------------------------\n",
      "Topic 7:\n",
      "brain neural neurons cognitive memory visual synaptic cortex learning cortical\n",
      "----------------------------\n",
      "Topic 8:\n",
      "dna gene genes genetic genome expression rna human genomic chromatin\n",
      "----------------------------\n",
      "Topic 9:\n",
      "protein proteins signaling membrane function molecular muscle mitochondrial mechanisms aim\n",
      "----------------------------\n"
     ]
    }
   ],
   "source": [
    "# View 10 topics returned by the NMF model again\n",
    "\n",
    "for topic_idx, topic in enumerate(nmf_H):\n",
    "    print(\"Topic %d:\" % (topic_idx))\n",
    "    print(\" \".join([vectorizer_feature_names[i]\n",
    "                for i in topic.argsort()[:-10 - 1:-1]]))\n",
    "    print('----------------------------')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 210,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Create topic names from the word lists above\n",
    "\n",
    "topics_names = pandas.DataFrame()\n",
    "topics_names['topic'] = [0,1,2,3,4,5,6,7,8,9]\n",
    "topics_names['topic_name'] = ['computational methods/research systems','training programs','cell research','health care','HIV','cancer','STEM education','brain/neural','DNA/genes','protein/molecular']"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 212,
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>topic</th>\n",
       "      <th>topic_name</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0</td>\n",
       "      <td>computational methods/research systems</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1</td>\n",
       "      <td>training programs</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>2</td>\n",
       "      <td>cell research</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>3</td>\n",
       "      <td>health care</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>4</td>\n",
       "      <td>HIV</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>5</td>\n",
       "      <td>cancer</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>6</td>\n",
       "      <td>STEM education</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>7</td>\n",
       "      <td>brain/neural</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>8</td>\n",
       "      <td>DNA/genes</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>9</td>\n",
       "      <td>protein/molecular</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   topic                              topic_name\n",
       "0      0  computational methods/research systems\n",
       "1      1                       training programs\n",
       "2      2                           cell research\n",
       "3      3                             health care\n",
       "4      4                                     HIV\n",
       "5      5                                  cancer\n",
       "6      6                          STEM education\n",
       "7      7                            brain/neural\n",
       "8      8                               DNA/genes\n",
       "9      9                       protein/molecular"
      ]
     },
     "execution_count": 212,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "topics_names"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Creating a finalized dataset"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Number of grants per university"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 278,
   "metadata": {},
   "outputs": [],
   "source": [
    "grants_per_university_full = projects.merge(projects_ipeds_combined,on=['PROJECT_ID',' ORGANIZATION_NAME'])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 283,
   "metadata": {},
   "outputs": [],
   "source": [
    "grants_per_university = grants_per_university_full.groupby(['UNITID',' ORGANIZATION_NAME'])[' PROJECT_NUMBER'].count().reset_index()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 284,
   "metadata": {},
   "outputs": [],
   "source": [
    "grants_per_university = grants_per_university.rename(columns={' PROJECT_NUMBER':'#grants'})"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 285,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>UNITID</th>\n",
       "      <th>ORGANIZATION_NAME</th>\n",
       "      <th>#grants</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>67</th>\n",
       "      <td>110699</td>\n",
       "      <td>universityofcaliforniasanfrancisco</td>\n",
       "      <td>11807</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>883</th>\n",
       "      <td>215062</td>\n",
       "      <td>universityofpennsylvania</td>\n",
       "      <td>11677</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1096</th>\n",
       "      <td>236948</td>\n",
       "      <td>universityofwashington</td>\n",
       "      <td>11580</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>885</th>\n",
       "      <td>215293</td>\n",
       "      <td>theuniversityofpittsburgh</td>\n",
       "      <td>11277</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>66</th>\n",
       "      <td>110680</td>\n",
       "      <td>universityofcaliforniasandiego</td>\n",
       "      <td>10096</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>64</th>\n",
       "      <td>110662</td>\n",
       "      <td>universityofcalifornialosangeles</td>\n",
       "      <td>9861</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>167</th>\n",
       "      <td>130794</td>\n",
       "      <td>yaleuniversity</td>\n",
       "      <td>9773</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1162</th>\n",
       "      <td>243744</td>\n",
       "      <td>stanforduniversity</td>\n",
       "      <td>9460</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>728</th>\n",
       "      <td>198419</td>\n",
       "      <td>dukeuniversity</td>\n",
       "      <td>8521</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>517</th>\n",
       "      <td>174066</td>\n",
       "      <td>universityofminnesotatwincities</td>\n",
       "      <td>7456</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "      UNITID                   ORGANIZATION_NAME  #grants\n",
       "67    110699  universityofcaliforniasanfrancisco    11807\n",
       "883   215062            universityofpennsylvania    11677\n",
       "1096  236948              universityofwashington    11580\n",
       "885   215293           theuniversityofpittsburgh    11277\n",
       "66    110680      universityofcaliforniasandiego    10096\n",
       "64    110662    universityofcalifornialosangeles     9861\n",
       "167   130794                      yaleuniversity     9773\n",
       "1162  243744                  stanforduniversity     9460\n",
       "728   198419                      dukeuniversity     8521\n",
       "517   174066     universityofminnesotatwincities     7456"
      ]
     },
     "execution_count": 285,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "grants_per_university.sort_values('#grants',ascending=False).head(10)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Top 5 topics by %grants"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Get the index of documents and topic probabilities per document\n",
    "topics_probabilities = []\n",
    "for index,i in enumerate(nmf_W): # for every document\n",
    "    topics_probabilities.append([i, index]) # get all topic probabilities\n",
    "\n",
    "topics_list_dataframe = pandas.DataFrame(topics_probabilities)\n",
    "topics_list_dataframe = topics_list_dataframe.rename(columns={0:'topic',1:'index'})\n",
    "merged_abstracts = merged_abstracts.reset_index()\n",
    "merged_topics_abstracts = merged_abstracts.merge(topics_list_dataframe,on='index')\n",
    "\n",
    "merged_topics_abstracts[[0,1,2,3,4,5,6,7,8,9]] = merged_topics_abstracts['topic'].apply(pd.Series)\n",
    "\n",
    "topics_per_grant = grants_per_university_full.merge(merged_topics_abstracts,on=['PROJECT_ID','UNITID',' ORGANIZATION_NAME'])\n",
    "\n",
    "topic_0 = topics_per_grant[0].sum()\n",
    "topic_1 = topics_per_grant[1].sum()\n",
    "topic_2 = topics_per_grant[2].sum()\n",
    "topic_3 = topics_per_grant[3].sum()\n",
    "topic_4 = topics_per_grant[4].sum()\n",
    "topic_5 = topics_per_grant[5].sum()\n",
    "topic_6 = topics_per_grant[6].sum()\n",
    "topic_7 = topics_per_grant[7].sum()\n",
    "topic_8 = topics_per_grant[8].sum()\n",
    "topic_9 = topics_per_grant[9].sum()\n",
    "\n",
    "total_topics_grants = [topic_0,topic_1,topic_2,topic_3,topic_4,topic_5,topic_6,topic_7,topic_8,topic_9]\n",
    "\n",
    "total_topics_grants = pandas.DataFrame(total_topics_grants)\n",
    "\n",
    "total_topics_grants = total_topics_grants.reset_index()\n",
    "total_topics_grants = total_topics_grants.rename(columns={'index':'topic'})\n",
    "\n",
    "total_topics_for_grants = total_topics_grants.merge(topics_names, on='topic')\n",
    "\n",
    "total_topics_for_grants.sort_values(0,ascending=False)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Top 5 topics by %dollars"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 453,
   "metadata": {},
   "outputs": [],
   "source": [
    "topics_per_grant_dollars = topics_per_grant[[' PROJECT_NUMBER',' FY_TOTAL_COST',0,1,2,3,4,5,6,7,8,9]]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 454,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>PROJECT_NUMBER</th>\n",
       "      <th>FY_TOTAL_COST</th>\n",
       "      <th>0</th>\n",
       "      <th>1</th>\n",
       "      <th>2</th>\n",
       "      <th>3</th>\n",
       "      <th>4</th>\n",
       "      <th>5</th>\n",
       "      <th>6</th>\n",
       "      <th>7</th>\n",
       "      <th>8</th>\n",
       "      <th>9</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>430463</td>\n",
       "      <td>139436.000000</td>\n",
       "      <td>0.006291</td>\n",
       "      <td>0.001624</td>\n",
       "      <td>0.000003</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000267</td>\n",
       "      <td>0.003216</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.002270</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>630282</td>\n",
       "      <td>136649.000000</td>\n",
       "      <td>0.007545</td>\n",
       "      <td>0.002425</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.003213</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000112</td>\n",
       "      <td>0.034228</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>635715</td>\n",
       "      <td>325551.000000</td>\n",
       "      <td>0.011510</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.008952</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.006734</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>636790</td>\n",
       "      <td>276881.000000</td>\n",
       "      <td>0.012357</td>\n",
       "      <td>0.000215</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.012225</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>636798</td>\n",
       "      <td>119990.000000</td>\n",
       "      <td>0.012357</td>\n",
       "      <td>0.000215</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.012225</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>636874</td>\n",
       "      <td>290294.000000</td>\n",
       "      <td>0.012357</td>\n",
       "      <td>0.000215</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.012225</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>636927</td>\n",
       "      <td>299485.000000</td>\n",
       "      <td>0.012357</td>\n",
       "      <td>0.000215</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.012225</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>636946</td>\n",
       "      <td>381557.000000</td>\n",
       "      <td>0.011966</td>\n",
       "      <td>0.005465</td>\n",
       "      <td>0.000257</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.005528</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.002974</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>636978</td>\n",
       "      <td>369998.000000</td>\n",
       "      <td>0.012357</td>\n",
       "      <td>0.000215</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.012225</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>638587</td>\n",
       "      <td>755822.000000</td>\n",
       "      <td>0.018077</td>\n",
       "      <td>0.002963</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000046</td>\n",
       "      <td>0.000019</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.009360</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>639698</td>\n",
       "      <td>1500000.000000</td>\n",
       "      <td>0.003216</td>\n",
       "      <td>0.003457</td>\n",
       "      <td>0.002639</td>\n",
       "      <td>0.000337</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000247</td>\n",
       "      <td>0.060580</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>640809</td>\n",
       "      <td>854845.000000</td>\n",
       "      <td>0.016059</td>\n",
       "      <td>0.008931</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.016226</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12</th>\n",
       "      <td>641037</td>\n",
       "      <td>629507.000000</td>\n",
       "      <td>0.019028</td>\n",
       "      <td>0.001998</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.002403</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.006862</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>13</th>\n",
       "      <td>643266</td>\n",
       "      <td>180000.000000</td>\n",
       "      <td>0.004915</td>\n",
       "      <td>0.004026</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000911</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000223</td>\n",
       "      <td>0.003134</td>\n",
       "      <td>0.021453</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>14</th>\n",
       "      <td>643462</td>\n",
       "      <td>710691.000000</td>\n",
       "      <td>0.015327</td>\n",
       "      <td>0.006415</td>\n",
       "      <td>0.002970</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000016</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.019323</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.010323</td>\n",
       "      <td>0.005654</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>15</th>\n",
       "      <td>644282</td>\n",
       "      <td>619439.000000</td>\n",
       "      <td>0.012786</td>\n",
       "      <td>0.003517</td>\n",
       "      <td>0.000598</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.003439</td>\n",
       "      <td>0.001758</td>\n",
       "      <td>0.033482</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>16</th>\n",
       "      <td>645728</td>\n",
       "      <td>160158.000000</td>\n",
       "      <td>0.008764</td>\n",
       "      <td>0.003293</td>\n",
       "      <td>0.000012</td>\n",
       "      <td>0.008312</td>\n",
       "      <td>0.000759</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.013477</td>\n",
       "      <td>0.002677</td>\n",
       "      <td>0.000141</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>17</th>\n",
       "      <td>646442</td>\n",
       "      <td>250219.000000</td>\n",
       "      <td>0.007353</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000001</td>\n",
       "      <td>0.000245</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.002131</td>\n",
       "      <td>0.000600</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.004617</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>18</th>\n",
       "      <td>646563</td>\n",
       "      <td>392444.000000</td>\n",
       "      <td>0.009260</td>\n",
       "      <td>0.002447</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.003819</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.007885</td>\n",
       "      <td>0.001680</td>\n",
       "      <td>0.000582</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>19</th>\n",
       "      <td>647157</td>\n",
       "      <td>380000.000000</td>\n",
       "      <td>0.012348</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.002047</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.005834</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.003845</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>20</th>\n",
       "      <td>649216</td>\n",
       "      <td>676321.000000</td>\n",
       "      <td>0.012848</td>\n",
       "      <td>0.004404</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000488</td>\n",
       "      <td>0.003724</td>\n",
       "      <td>0.002352</td>\n",
       "      <td>0.000031</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>21</th>\n",
       "      <td>649410</td>\n",
       "      <td>1316890.000000</td>\n",
       "      <td>0.012848</td>\n",
       "      <td>0.004404</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000488</td>\n",
       "      <td>0.003724</td>\n",
       "      <td>0.002352</td>\n",
       "      <td>0.000031</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>22</th>\n",
       "      <td>649489</td>\n",
       "      <td>216791.000000</td>\n",
       "      <td>0.009351</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000178</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.007742</td>\n",
       "      <td>0.000742</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.004186</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>23</th>\n",
       "      <td>650130</td>\n",
       "      <td>600000.000000</td>\n",
       "      <td>0.008139</td>\n",
       "      <td>0.007129</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.002493</td>\n",
       "      <td>0.000276</td>\n",
       "      <td>0.000215</td>\n",
       "      <td>0.016064</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000376</td>\n",
       "      <td>0.000385</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>24</th>\n",
       "      <td>650163</td>\n",
       "      <td>600000.000000</td>\n",
       "      <td>0.017953</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000450</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.019311</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.002571</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25</th>\n",
       "      <td>650233</td>\n",
       "      <td>535545.000000</td>\n",
       "      <td>0.004032</td>\n",
       "      <td>0.016965</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.001449</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000158</td>\n",
       "      <td>0.030194</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>26</th>\n",
       "      <td>650251</td>\n",
       "      <td>599856.000000</td>\n",
       "      <td>0.008485</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.002813</td>\n",
       "      <td>0.000297</td>\n",
       "      <td>0.000453</td>\n",
       "      <td>0.037624</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000600</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>27</th>\n",
       "      <td>650271</td>\n",
       "      <td>600000.000000</td>\n",
       "      <td>0.007344</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.001650</td>\n",
       "      <td>0.000056</td>\n",
       "      <td>0.000200</td>\n",
       "      <td>0.051273</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.001239</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>28</th>\n",
       "      <td>650279</td>\n",
       "      <td>571560.000000</td>\n",
       "      <td>0.005816</td>\n",
       "      <td>0.001908</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.023876</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.003938</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>29</th>\n",
       "      <td>650282</td>\n",
       "      <td>596679.000000</td>\n",
       "      <td>0.005055</td>\n",
       "      <td>0.009541</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.001068</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000591</td>\n",
       "      <td>0.021682</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>345047</th>\n",
       "      <td>U916203</td>\n",
       "      <td>108344.000000</td>\n",
       "      <td>0.003685</td>\n",
       "      <td>0.001890</td>\n",
       "      <td>0.005377</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000372</td>\n",
       "      <td>0.009028</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>345048</th>\n",
       "      <td>U916208</td>\n",
       "      <td>106845.000000</td>\n",
       "      <td>0.003728</td>\n",
       "      <td>0.001631</td>\n",
       "      <td>0.002304</td>\n",
       "      <td>0.005499</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.001303</td>\n",
       "      <td>0.004354</td>\n",
       "      <td>0.002817</td>\n",
       "      <td>0.003082</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>345049</th>\n",
       "      <td>U916210</td>\n",
       "      <td>120632.000000</td>\n",
       "      <td>0.006458</td>\n",
       "      <td>0.002616</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.003431</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.003441</td>\n",
       "      <td>0.001479</td>\n",
       "      <td>0.005389</td>\n",
       "      <td>0.000259</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>345050</th>\n",
       "      <td>U916212</td>\n",
       "      <td>125611.000000</td>\n",
       "      <td>0.004310</td>\n",
       "      <td>0.000653</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.004592</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.007380</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.001634</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>345051</th>\n",
       "      <td>U916213</td>\n",
       "      <td>115970.000000</td>\n",
       "      <td>0.003402</td>\n",
       "      <td>0.002338</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.003241</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.003133</td>\n",
       "      <td>0.000749</td>\n",
       "      <td>0.012820</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>345052</th>\n",
       "      <td>U916216</td>\n",
       "      <td>120692.000000</td>\n",
       "      <td>0.008172</td>\n",
       "      <td>0.000689</td>\n",
       "      <td>0.000792</td>\n",
       "      <td>0.003057</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000877</td>\n",
       "      <td>0.002224</td>\n",
       "      <td>0.000753</td>\n",
       "      <td>0.002354</td>\n",
       "      <td>0.006081</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>345053</th>\n",
       "      <td>U916220</td>\n",
       "      <td>157742.000000</td>\n",
       "      <td>0.002040</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.002420</td>\n",
       "      <td>0.000066</td>\n",
       "      <td>0.007104</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>345054</th>\n",
       "      <td>U916224</td>\n",
       "      <td>120740.000000</td>\n",
       "      <td>0.001836</td>\n",
       "      <td>0.001129</td>\n",
       "      <td>0.000905</td>\n",
       "      <td>0.000644</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000982</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000920</td>\n",
       "      <td>0.004135</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>345055</th>\n",
       "      <td>U916226</td>\n",
       "      <td>100185.000000</td>\n",
       "      <td>0.005641</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.014333</td>\n",
       "      <td>0.001686</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.002956</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.006046</td>\n",
       "      <td>0.000661</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>345056</th>\n",
       "      <td>U916227</td>\n",
       "      <td>130598.000000</td>\n",
       "      <td>0.003339</td>\n",
       "      <td>0.001129</td>\n",
       "      <td>0.000147</td>\n",
       "      <td>0.003350</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.002198</td>\n",
       "      <td>0.000042</td>\n",
       "      <td>0.000791</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>345057</th>\n",
       "      <td>U916230</td>\n",
       "      <td>108172.000000</td>\n",
       "      <td>0.007828</td>\n",
       "      <td>0.000539</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.004436</td>\n",
       "      <td>0.000032</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.002203</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>345058</th>\n",
       "      <td>U916231</td>\n",
       "      <td>168936.000000</td>\n",
       "      <td>0.005943</td>\n",
       "      <td>0.001105</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000179</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000830</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000828</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>345059</th>\n",
       "      <td>U916235</td>\n",
       "      <td>108344.000000</td>\n",
       "      <td>0.008327</td>\n",
       "      <td>0.000706</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.001761</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000454</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>345060</th>\n",
       "      <td>U916243</td>\n",
       "      <td>110266.000000</td>\n",
       "      <td>0.007482</td>\n",
       "      <td>0.000971</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000706</td>\n",
       "      <td>0.001648</td>\n",
       "      <td>0.006127</td>\n",
       "      <td>0.000835</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>345061</th>\n",
       "      <td>U916244</td>\n",
       "      <td>101483.000000</td>\n",
       "      <td>0.006070</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.004605</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000283</td>\n",
       "      <td>0.003327</td>\n",
       "      <td>0.002105</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>345062</th>\n",
       "      <td>U916252</td>\n",
       "      <td>123152.000000</td>\n",
       "      <td>0.005334</td>\n",
       "      <td>0.002767</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.002536</td>\n",
       "      <td>0.000773</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.001452</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000738</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>345063</th>\n",
       "      <td>VR150029</td>\n",
       "      <td>1495405.000000</td>\n",
       "      <td>0.002201</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.012691</td>\n",
       "      <td>0.005449</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000769</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.011263</td>\n",
       "      <td>0.003803</td>\n",
       "      <td>0.005105</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>345064</th>\n",
       "      <td>VR150065</td>\n",
       "      <td>1500000.000000</td>\n",
       "      <td>0.011219</td>\n",
       "      <td>0.001906</td>\n",
       "      <td>0.007952</td>\n",
       "      <td>0.006941</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.003350</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.007678</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000064</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>345065</th>\n",
       "      <td>VR170139</td>\n",
       "      <td>1501167.000000</td>\n",
       "      <td>0.002083</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.003930</td>\n",
       "      <td>0.000036</td>\n",
       "      <td>0.000699</td>\n",
       "      <td>0.000890</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.030650</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.008827</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>345066</th>\n",
       "      <td>VR170167</td>\n",
       "      <td>1905666.000000</td>\n",
       "      <td>0.000221</td>\n",
       "      <td>0.001295</td>\n",
       "      <td>0.008991</td>\n",
       "      <td>0.004941</td>\n",
       "      <td>0.000141</td>\n",
       "      <td>0.003749</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.008997</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.011138</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>345067</th>\n",
       "      <td>VR170180</td>\n",
       "      <td>5249999.000000</td>\n",
       "      <td>0.002852</td>\n",
       "      <td>0.001365</td>\n",
       "      <td>0.013843</td>\n",
       "      <td>0.011693</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.002253</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.002746</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.002705</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>345068</th>\n",
       "      <td>X3832204</td>\n",
       "      <td>255000.000000</td>\n",
       "      <td>0.008373</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.002959</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000453</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>345069</th>\n",
       "      <td>X3832205</td>\n",
       "      <td>287999.000000</td>\n",
       "      <td>0.011358</td>\n",
       "      <td>0.001564</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.001466</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000277</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000787</td>\n",
       "      <td>0.001581</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>345070</th>\n",
       "      <td>X3832209</td>\n",
       "      <td>287400.000000</td>\n",
       "      <td>0.008339</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000549</td>\n",
       "      <td>0.007469</td>\n",
       "      <td>0.000093</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.002062</td>\n",
       "      <td>0.001773</td>\n",
       "      <td>0.001783</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>345071</th>\n",
       "      <td>X3832305</td>\n",
       "      <td>286423.000000</td>\n",
       "      <td>0.009031</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.002842</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.005766</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000404</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>345072</th>\n",
       "      <td>X832302</td>\n",
       "      <td>727000.000000</td>\n",
       "      <td>0.006868</td>\n",
       "      <td>0.005523</td>\n",
       "      <td>0.002128</td>\n",
       "      <td>0.003833</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.001403</td>\n",
       "      <td>0.000810</td>\n",
       "      <td>0.003407</td>\n",
       "      <td>0.003118</td>\n",
       "      <td>0.000103</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>345073</th>\n",
       "      <td>X832317</td>\n",
       "      <td>969300.000000</td>\n",
       "      <td>0.009401</td>\n",
       "      <td>0.002715</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.007970</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000423</td>\n",
       "      <td>0.003464</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>345074</th>\n",
       "      <td>X832325</td>\n",
       "      <td>11704724.000000</td>\n",
       "      <td>0.004651</td>\n",
       "      <td>0.004670</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.002312</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000331</td>\n",
       "      <td>0.036476</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.001267</td>\n",
       "      <td>0.002446</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>345075</th>\n",
       "      <td>X832331</td>\n",
       "      <td>193900.000000</td>\n",
       "      <td>0.002042</td>\n",
       "      <td>0.002683</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.001313</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.002824</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000208</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>345076</th>\n",
       "      <td>X832719</td>\n",
       "      <td>193500.000000</td>\n",
       "      <td>0.002254</td>\n",
       "      <td>0.002038</td>\n",
       "      <td>0.002108</td>\n",
       "      <td>0.012387</td>\n",
       "      <td>0.002220</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.005196</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.008064</td>\n",
       "      <td>0.001082</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>345077 rows × 12 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "        PROJECT_NUMBER   FY_TOTAL_COST        0        1        2        3  \\\n",
       "0               430463   139436.000000 0.006291 0.001624 0.000003 0.000000   \n",
       "1               630282   136649.000000 0.007545 0.002425 0.000000 0.003213   \n",
       "2               635715   325551.000000 0.011510 0.000000 0.000000 0.000000   \n",
       "3               636790   276881.000000 0.012357 0.000215 0.000000 0.000000   \n",
       "4               636798   119990.000000 0.012357 0.000215 0.000000 0.000000   \n",
       "5               636874   290294.000000 0.012357 0.000215 0.000000 0.000000   \n",
       "6               636927   299485.000000 0.012357 0.000215 0.000000 0.000000   \n",
       "7               636946   381557.000000 0.011966 0.005465 0.000257 0.000000   \n",
       "8               636978   369998.000000 0.012357 0.000215 0.000000 0.000000   \n",
       "9               638587   755822.000000 0.018077 0.002963 0.000000 0.000046   \n",
       "10              639698  1500000.000000 0.003216 0.003457 0.002639 0.000337   \n",
       "11              640809   854845.000000 0.016059 0.008931 0.000000 0.000000   \n",
       "12              641037   629507.000000 0.019028 0.001998 0.000000 0.000000   \n",
       "13              643266   180000.000000 0.004915 0.004026 0.000000 0.000911   \n",
       "14              643462   710691.000000 0.015327 0.006415 0.002970 0.000000   \n",
       "15              644282   619439.000000 0.012786 0.003517 0.000598 0.000000   \n",
       "16              645728   160158.000000 0.008764 0.003293 0.000012 0.008312   \n",
       "17              646442   250219.000000 0.007353 0.000000 0.000000 0.000001   \n",
       "18              646563   392444.000000 0.009260 0.002447 0.000000 0.003819   \n",
       "19              647157   380000.000000 0.012348 0.000000 0.002047 0.000000   \n",
       "20              649216   676321.000000 0.012848 0.004404 0.000000 0.000000   \n",
       "21              649410  1316890.000000 0.012848 0.004404 0.000000 0.000000   \n",
       "22              649489   216791.000000 0.009351 0.000000 0.000178 0.000000   \n",
       "23              650130   600000.000000 0.008139 0.007129 0.000000 0.002493   \n",
       "24              650163   600000.000000 0.017953 0.000000 0.000000 0.000450   \n",
       "25              650233   535545.000000 0.004032 0.016965 0.000000 0.001449   \n",
       "26              650251   599856.000000 0.008485 0.000000 0.000000 0.002813   \n",
       "27              650271   600000.000000 0.007344 0.000000 0.000000 0.001650   \n",
       "28              650279   571560.000000 0.005816 0.001908 0.000000 0.000000   \n",
       "29              650282   596679.000000 0.005055 0.009541 0.000000 0.001068   \n",
       "...                ...             ...      ...      ...      ...      ...   \n",
       "345047         U916203   108344.000000 0.003685 0.001890 0.005377 0.000000   \n",
       "345048         U916208   106845.000000 0.003728 0.001631 0.002304 0.005499   \n",
       "345049         U916210   120632.000000 0.006458 0.002616 0.000000 0.003431   \n",
       "345050         U916212   125611.000000 0.004310 0.000653 0.000000 0.004592   \n",
       "345051         U916213   115970.000000 0.003402 0.002338 0.000000 0.003241   \n",
       "345052         U916216   120692.000000 0.008172 0.000689 0.000792 0.003057   \n",
       "345053         U916220   157742.000000 0.002040 0.000000 0.000000 0.000000   \n",
       "345054         U916224   120740.000000 0.001836 0.001129 0.000905 0.000644   \n",
       "345055         U916226   100185.000000 0.005641 0.000000 0.000000 0.014333   \n",
       "345056         U916227   130598.000000 0.003339 0.001129 0.000147 0.003350   \n",
       "345057         U916230   108172.000000 0.007828 0.000539 0.000000 0.004436   \n",
       "345058         U916231   168936.000000 0.005943 0.001105 0.000000 0.000179   \n",
       "345059         U916235   108344.000000 0.008327 0.000706 0.000000 0.001761   \n",
       "345060         U916243   110266.000000 0.007482 0.000971 0.000000 0.000000   \n",
       "345061         U916244   101483.000000 0.006070 0.000000 0.000000 0.004605   \n",
       "345062         U916252   123152.000000 0.005334 0.002767 0.000000 0.002536   \n",
       "345063        VR150029  1495405.000000 0.002201 0.000000 0.012691 0.005449   \n",
       "345064        VR150065  1500000.000000 0.011219 0.001906 0.007952 0.006941   \n",
       "345065        VR170139  1501167.000000 0.002083 0.000000 0.003930 0.000036   \n",
       "345066        VR170167  1905666.000000 0.000221 0.001295 0.008991 0.004941   \n",
       "345067        VR170180  5249999.000000 0.002852 0.001365 0.013843 0.011693   \n",
       "345068        X3832204   255000.000000 0.008373 0.000000 0.000000 0.002959   \n",
       "345069        X3832205   287999.000000 0.011358 0.001564 0.000000 0.001466   \n",
       "345070        X3832209   287400.000000 0.008339 0.000000 0.000549 0.007469   \n",
       "345071        X3832305   286423.000000 0.009031 0.000000 0.000000 0.002842   \n",
       "345072         X832302   727000.000000 0.006868 0.005523 0.002128 0.003833   \n",
       "345073         X832317   969300.000000 0.009401 0.002715 0.000000 0.007970   \n",
       "345074         X832325 11704724.000000 0.004651 0.004670 0.000000 0.002312   \n",
       "345075         X832331   193900.000000 0.002042 0.002683 0.000000 0.001313   \n",
       "345076         X832719   193500.000000 0.002254 0.002038 0.002108 0.012387   \n",
       "\n",
       "              4        5        6        7        8        9  \n",
       "0      0.000000 0.000267 0.003216 0.000000 0.000000 0.002270  \n",
       "1      0.000000 0.000112 0.034228 0.000000 0.000000 0.000000  \n",
       "2      0.000000 0.000000 0.008952 0.000000 0.000000 0.006734  \n",
       "3      0.000000 0.000000 0.012225 0.000000 0.000000 0.000000  \n",
       "4      0.000000 0.000000 0.012225 0.000000 0.000000 0.000000  \n",
       "5      0.000000 0.000000 0.012225 0.000000 0.000000 0.000000  \n",
       "6      0.000000 0.000000 0.012225 0.000000 0.000000 0.000000  \n",
       "7      0.000000 0.000000 0.005528 0.000000 0.000000 0.002974  \n",
       "8      0.000000 0.000000 0.012225 0.000000 0.000000 0.000000  \n",
       "9      0.000019 0.000000 0.009360 0.000000 0.000000 0.000000  \n",
       "10     0.000000 0.000247 0.060580 0.000000 0.000000 0.000000  \n",
       "11     0.000000 0.000000 0.000000 0.000000 0.016226 0.000000  \n",
       "12     0.000000 0.000000 0.002403 0.000000 0.006862 0.000000  \n",
       "13     0.000000 0.000223 0.003134 0.021453 0.000000 0.000000  \n",
       "14     0.000016 0.000000 0.019323 0.000000 0.010323 0.005654  \n",
       "15     0.000000 0.000000 0.003439 0.001758 0.033482 0.000000  \n",
       "16     0.000759 0.000000 0.013477 0.002677 0.000141 0.000000  \n",
       "17     0.000245 0.000000 0.002131 0.000600 0.000000 0.004617  \n",
       "18     0.000000 0.000000 0.007885 0.001680 0.000582 0.000000  \n",
       "19     0.000000 0.000000 0.005834 0.000000 0.000000 0.003845  \n",
       "20     0.000000 0.000488 0.003724 0.002352 0.000031 0.000000  \n",
       "21     0.000000 0.000488 0.003724 0.002352 0.000031 0.000000  \n",
       "22     0.000000 0.000000 0.007742 0.000742 0.000000 0.004186  \n",
       "23     0.000276 0.000215 0.016064 0.000000 0.000376 0.000385  \n",
       "24     0.000000 0.000000 0.019311 0.000000 0.000000 0.002571  \n",
       "25     0.000000 0.000158 0.030194 0.000000 0.000000 0.000000  \n",
       "26     0.000297 0.000453 0.037624 0.000000 0.000000 0.000600  \n",
       "27     0.000056 0.000200 0.051273 0.000000 0.000000 0.001239  \n",
       "28     0.000000 0.000000 0.023876 0.000000 0.003938 0.000000  \n",
       "29     0.000000 0.000591 0.021682 0.000000 0.000000 0.000000  \n",
       "...         ...      ...      ...      ...      ...      ...  \n",
       "345047 0.000000 0.000000 0.000000 0.000000 0.000372 0.009028  \n",
       "345048 0.000000 0.000000 0.001303 0.004354 0.002817 0.003082  \n",
       "345049 0.000000 0.000000 0.003441 0.001479 0.005389 0.000259  \n",
       "345050 0.000000 0.000000 0.007380 0.000000 0.001634 0.000000  \n",
       "345051 0.000000 0.000000 0.003133 0.000749 0.012820 0.000000  \n",
       "345052 0.000000 0.000877 0.002224 0.000753 0.002354 0.006081  \n",
       "345053 0.000000 0.000000 0.002420 0.000066 0.007104 0.000000  \n",
       "345054 0.000000 0.000000 0.000982 0.000000 0.000920 0.004135  \n",
       "345055 0.001686 0.000000 0.002956 0.000000 0.006046 0.000661  \n",
       "345056 0.000000 0.000000 0.002198 0.000042 0.000791 0.000000  \n",
       "345057 0.000032 0.000000 0.002203 0.000000 0.000000 0.000000  \n",
       "345058 0.000000 0.000000 0.000830 0.000000 0.000000 0.000828  \n",
       "345059 0.000000 0.000000 0.000454 0.000000 0.000000 0.000000  \n",
       "345060 0.000000 0.000000 0.000706 0.001648 0.006127 0.000835  \n",
       "345061 0.000000 0.000000 0.000283 0.003327 0.002105 0.000000  \n",
       "345062 0.000773 0.000000 0.001452 0.000000 0.000738 0.000000  \n",
       "345063 0.000000 0.000769 0.000000 0.011263 0.003803 0.005105  \n",
       "345064 0.000000 0.003350 0.000000 0.007678 0.000000 0.000064  \n",
       "345065 0.000699 0.000890 0.000000 0.030650 0.000000 0.008827  \n",
       "345066 0.000141 0.003749 0.000000 0.008997 0.000000 0.011138  \n",
       "345067 0.000000 0.002253 0.000000 0.002746 0.000000 0.002705  \n",
       "345068 0.000000 0.000000 0.000453 0.000000 0.000000 0.000000  \n",
       "345069 0.000000 0.000000 0.000277 0.000000 0.000787 0.001581  \n",
       "345070 0.000093 0.000000 0.002062 0.001773 0.001783 0.000000  \n",
       "345071 0.000000 0.000000 0.005766 0.000000 0.000404 0.000000  \n",
       "345072 0.000000 0.001403 0.000810 0.003407 0.003118 0.000103  \n",
       "345073 0.000000 0.000423 0.003464 0.000000 0.000000 0.000000  \n",
       "345074 0.000000 0.000331 0.036476 0.000000 0.001267 0.002446  \n",
       "345075 0.000000 0.000000 0.002824 0.000000 0.000208 0.000000  \n",
       "345076 0.002220 0.000000 0.005196 0.000000 0.008064 0.001082  \n",
       "\n",
       "[345077 rows x 12 columns]"
      ]
     },
     "execution_count": 454,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "topics_per_grant_dollars"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.7.3"
  },
  "toc": {
   "base_numbering": 1,
   "nav_menu": {},
   "number_sections": true,
   "sideBar": true,
   "skip_h1_title": false,
   "title_cell": "Table of Contents",
   "title_sidebar": "Contents",
   "toc_cell": true,
   "toc_position": {
    "height": "calc(100% - 180px)",
    "left": "10px",
    "top": "150px",
    "width": "203.796875px"
   },
   "toc_section_display": true,
   "toc_window_display": true
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
